<?xml version="1.0"?>
<xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://schema.reactant.tech/ui"
    xmlns="http://schema.reactant.tech/ui"
    elementFormDefault="qualified"
    vc:minVersion="1.1"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
    xmlns:layout="http://schema.reactant.tech/layout">

    <xs:import namespace="http://schema.reactant.tech/layout" schemaLocation="layout.xsd" />

    <xs:element name="Component">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:group ref="ViewGroup"/>
                <xs:element name="styles" minOccurs="0" maxOccurs="1" type="stylesType" />
            </xs:choice>
            <xs:attribute name="type" type="xs:string" use="required"/>
            <xs:attribute name="rootView" type="xs:boolean" default="false"/>
            <xs:attribute name="extend" type="rectEdge" />
            <xs:attribute name="anonymous" type="xs:boolean" default="false"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="styleGroup" type="stylesType"/>

    <xs:group name="ViewGroup">
        <xs:choice>
            <xs:element name="ImageView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="imageStyleAttributes" />
                            <xs:attribute name="image" type="xs:string"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="View" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:choice maxOccurs="unbounded" minOccurs="0">
                                <xs:group ref="ViewGroup"/>
                            </xs:choice>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Container" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:choice maxOccurs="unbounded" minOccurs="0">
                                <xs:group ref="ViewGroup"/>
                            </xs:choice>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="StackView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:choice maxOccurs="unbounded" minOccurs="0">
                                <xs:group ref="ViewGroup"/>
                            </xs:choice>
                            <xs:attributeGroup ref="stackViewStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="ScrollView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:choice maxOccurs="1" minOccurs="0">
                                <xs:group ref="ViewGroup" />
                            </xs:choice>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Label" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="labelStyleAttributes" />
                            <xs:attribute name="text" type="xs:string"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="TextField" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="textFieldStyleAttributes" />
                            <xs:attribute name="text" type="xs:string"/>
                            <xs:attribute name="placeholder" type="xs:string" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="TextView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="textViewStyleAttributes" />
                            <xs:attribute name="text" type="xs:string"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Button" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="buttonStyleAttributes" />
                            <xs:attribute name="title" type="xs:string" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Component" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="type" type="xs:string" />
                    <xs:attributeGroup ref="layout:layoutAttributes" />
                </xs:complexType>
            </xs:element>

            <xs:element name="ActivityIndicator" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="activityIndicatorStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="DatePicker" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="datePickerStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="NavigationBar" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="navigationBarStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="PageControl" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="pageControlStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="PickerView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="SearchBar" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="searchBarStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="SegmentedControl" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="segmentedControlStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Slider" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="sliderStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Stepper" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="stepperStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Switch" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="switchStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="TabBar" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="tabBarStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="Toolbar" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="toolbarStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="VisualEffectView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="visualEffectViewStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="WebView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="webViewStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="MapView" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="viewType">
                            <xs:attributeGroup ref="mapViewStyleAttributes" />
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>

        </xs:choice>
    </xs:group>

    <xs:complexType name="stylesType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element name="ViewStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="viewStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="LabelStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="labelStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="TextFieldStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="textFieldStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="TextViewStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="textViewStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="ActivityIndicatorStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="activityIndicatorStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="ButtonStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="buttonStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="ImageViewStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="imageStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="StackViewStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="stackViewStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="ActivityIndicatorStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="activityIndicatorStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="DatePickerStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="datePickerStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="NavigationBarStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="navigationBarStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="PageControlStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="pageControlStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="PickerViewStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="SearchBarStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="searchBarStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="SegmentedControlStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="segmentedControlStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="SliderStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="sliderStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="StepperStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="stepperStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="SwitchStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="switchStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="ToolbarStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="toolbarStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="VisualEffectViewStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="visualEffectViewStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="WebViewStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="webViewStyleAttributes" />
                </xs:complexType>
            </xs:element>
            <xs:element name="MapViewStyle">
                <xs:complexType>
                    <xs:attributeGroup ref="styleAttributes" />
                    <xs:attributeGroup ref="mapViewStyleAttributes" />
                </xs:complexType>
            </xs:element>
        </xs:choice>
        <xs:attribute name="name" type="xs:string" />
    </xs:complexType>

    <xs:attributeGroup name="styleAttributes">
        <xs:attribute name="name" type="xs:string" />
        <xs:attribute name="extend" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="viewStyleAttributes">
        <xs:attribute name="backgroundColor" type="color"/>
        <xs:attribute name="clipsToBounds" type="xs:boolean"/>
        <xs:attribute name="isUserInteractionEnabled" type="xs:boolean"/>
        <xs:attribute name="tintColor" type="color"/>
        <xs:attribute name="isHidden" type="xs:boolean"/>
        <xs:attribute name="alpha" type="xs:decimal"/>
        <xs:attribute name="isOpaque" type="xs:boolean"/>
        <xs:attribute name="isMultipleTouchEnabled" type="xs:boolean"/>
        <xs:attribute name="isExclusiveTouch" type="xs:boolean"/>
        <xs:attribute name="autoresizesSubviews" type="xs:boolean"/>
        <xs:attribute name="contentMode" type="contentMode"/>
        <xs:attribute name="translatesAutoresizingMaskIntoConstraints" type="xs:boolean"/>
        <xs:attribute name="tag" type="xs:decimal"/>
        <xs:attribute name="canBecomeFocused" type="xs:boolean"/>
        <xs:attribute name="visibility" type="visibility"/>
        <xs:attribute name="frame" type="xs:string"/>
        <xs:attribute name="bounds" type="xs:string"/>
        <xs:attribute name="layoutMargins" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="layerStyleAttributes">
        <xs:attribute name="layer.cornerRadius" type="xs:decimal"/>
        <xs:attribute name="layer.borderWidth" type="xs:decimal"/>
        <xs:attribute name="layer.opacity" type="xs:decimal"/>
        <xs:attribute name="layer.isHidden" type="xs:boolean"/>
        <xs:attribute name="layer.masksToBounds" type="xs:boolean"/>
        <xs:attribute name="layer.isDoubleSided" type="xs:boolean"/>
        <xs:attribute name="layer.backgroundColor" type="color"/>
        <xs:attribute name="layer.shadowOpacity" type="xs:decimal"/>
        <xs:attribute name="layer.shadowRadius" type="xs:decimal"/>
        <xs:attribute name="layer.shadowColor" type="color"/>
        <xs:attribute name="layer.allowsEdgeAntialiasing" type="xs:boolean"/>
        <xs:attribute name="layer.allowsGroupOpacity" type="xs:boolean"/>
        <xs:attribute name="layer.isOpaque" type="xs:boolean"/>
        <xs:attribute name="layer.isGeometryFlipped" type="xs:boolean"/>
        <xs:attribute name="layer.shouldRasterize" type="xs:boolean"/>
        <xs:attribute name="layer.rasterizationScale" type="xs:decimal"/>
        <xs:attribute name="layer.contentsFormat" type="xs:string"/>
        <xs:attribute name="layer.contentsScale" type="xs:decimal"/>
        <xs:attribute name="layer.zPosition" type="xs:decimal"/>
        <xs:attribute name="layer.name" type="xs:string"/>
        <xs:attribute name="layer.contentsRect" type="xs:string"/>
        <xs:attribute name="layer.contentsCenter" type="xs:string"/>
        <xs:attribute name="layer.shadowOffset" type="xs:string"/>
        <xs:attribute name="layer.frame" type="xs:string"/>
        <xs:attribute name="layer.bounds" type="xs:string"/>
        <xs:attribute name="layer.position" type="xs:string"/>
        <xs:attribute name="layer.anchorPoint" type="xs:string"/>

    </xs:attributeGroup>

    <xs:attributeGroup name="stackViewStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="axis" type="layoutAxis" />
        <xs:attribute name="distribution" type="layoutDistribution" />
        <xs:attribute name="alignment" type="layoutAlignment" />
        <xs:attribute name="spacing" type="xs:decimal" />
        <xs:attribute name="isBaselineRelativeArrangement" type="xs:boolean" />
        <xs:attribute name="isLayoutMarginsRelativeArrangement" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="datePickerStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="minuteInterval" type="xs:decimal"/>
        <xs:attribute name="mode" type="datePickerMode"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="navigationBarStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="barTintColor" type="color"/>
        <xs:attribute name="isTranslucent" type="xs:boolean"/>
        <xs:attribute name="barStyle" type="barStyle"/>
        <xs:attribute name="backIndicatorImage" type="xs:string"/>
        <xs:attribute name="backIndicatorTransitionMaskImage" type="xs:string"/>
        <xs:attribute name="shadowImage" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="pageControlStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="currentPage" type="xs:decimal"/>
        <xs:attribute name="numberOfPages" type="xs:decimal"/>
        <xs:attribute name="hidesForSinglePage" type="xs:boolean"/>
        <xs:attribute name="pageIndicatorTintColor" type="xs:string"/>
        <xs:attribute name="currentPageIndicatorTintColor" type="xs:string"/>
        <xs:attribute name="defersCurrentPageDisplay" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="searchBarStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="text" type="xs:string"/>
        <xs:attribute name="placeholder" type="xs:string"/>
        <xs:attribute name="prompt" type="xs:string"/>
        <xs:attribute name="barTintColor" type="xs:string"/>
        <xs:attribute name="barStyle" type="barStyle"/>
        <xs:attribute name="searchBarStyle" type="searchBarStyle"/>
        <xs:attribute name="isTranslucent" type="xs:boolean"/>
        <xs:attribute name="showsBookmarkButton" type="xs:boolean"/>
        <xs:attribute name="showsCancelButton" type="xs:boolean"/>
        <xs:attribute name="showsSearchResultsButton" type="xs:boolean"/>
        <xs:attribute name="isSearchResultsButtonSelected" type="xs:boolean"/>
        <xs:attribute name="selectedScopeButtonIndex" type="xs:decimal"/>
        <xs:attribute name="showsScopeBar" type="xs:boolean"/>
        <xs:attribute name="backgroundImage" type="xs:string"/>
        <xs:attribute name="scopeBarBackgroundImage" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="segmentedControlStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="selectedSegmentIndex" type="xs:decimal"/>
        <xs:attribute name="isMomentary" type="xs:boolean"/>
        <xs:attribute name="apportionsSegmentWidthsByContent" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="sliderStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="value" type="xs:decimal"/>
        <xs:attribute name="minimumValue" type="xs:decimal"/>
        <xs:attribute name="maximumValue" type="xs:decimal"/>
        <xs:attribute name="isContinuous" type="xs:boolean"/>
        <xs:attribute name="minimumValueImage" type="xs:string"/>
        <xs:attribute name="maximumValueImage" type="xs:string"/>
        <xs:attribute name="minimumTrackTintColor" type="color"/>
        <xs:attribute name="currentMinimumTrackImage" type="xs:string"/>
        <xs:attribute name="currentMaximumTrackImage" type="xs:string"/>
        <xs:attribute name="thumbTintColor" type="color"/>
        <xs:attribute name="currentThumbImage" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="stepperStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="value" type="xs:decimal"/>
        <xs:attribute name="minimumValue" type="xs:decimal"/>
        <xs:attribute name="maximumValue" type="xs:decimal"/>
        <xs:attribute name="stepValue" type="xs:decimal"/>
        <xs:attribute name="isContinuous" type="xs:boolean"/>
        <xs:attribute name="autorepeat" type="xs:boolean"/>
        <xs:attribute name="wraps" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="switchStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="isOn" type="xs:boolean"/>
        <xs:attribute name="onTintColor" type="color"/>
        <xs:attribute name="thumbTintColor" type="color"/>
        <xs:attribute name="onImage" type="xs:string"/>
        <xs:attribute name="offImage" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="tabBarStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="barTintColor" type="color"/>
        <xs:attribute name="isTranslucent" type="xs:boolean"/>
        <xs:attribute name="barStyle" type="barStyle"/>
        <xs:attribute name="itemSpacing" type="xs:decimal"/>
        <xs:attribute name="itemWidth" type="xs:decimal"/>
        <xs:attribute name="backgroundImage" type="xs:string"/>
        <xs:attribute name="shadowImage" type="xs:string"/>
        <xs:attribute name="selectionIndicatorImage" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="toolbarStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="barTintColor" type="color"/>
        <xs:attribute name="isTranslucent" type="xs:boolean"/>
        <xs:attribute name="barStyle" type="barStyle"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="visualEffectViewStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="effect" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="webViewStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="allowsMagnification" type="xs:boolean"/>
        <xs:attribute name="magnification" type="xs:decimal"/>
        <xs:attribute name="allowsBackForwardNavigationGestures" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="mapViewStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="mapType" type="xs:boolean"/>
        <xs:attribute name="isZoomEnabled" type="xs:boolean"/>
        <xs:attribute name="isScrollEnabled" type="xs:boolean"/>
        <xs:attribute name="isPitchEnabled" type="xs:boolean"/>
        <xs:attribute name="isRotateEnabled" type="xs:boolean"/>
        <xs:attribute name="showsPointsOfInterest" type="xs:boolean"/>
        <xs:attribute name="showsBuildings" type="xs:boolean"/>
        <xs:attribute name="showsCompass" type="xs:boolean"/>
        <xs:attribute name="showsZoomControls" type="xs:boolean"/>
        <xs:attribute name="showsScale" type="xs:boolean"/>
        <xs:attribute name="showsTraffic" type="xs:boolean"/>
        <xs:attribute name="showsUserLocation" type="xs:boolean"/>
        <xs:attribute name="isUserLocationVisible" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="imageStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="image" type="xs:string" />
        <xs:attribute name="highlightedImage" type="xs:string" />
        <xs:attribute name="animationRepeatCount" type="xs:integer" />
        <xs:attribute name="isHighlighted" type="xs:boolean" />
        <xs:attribute name="adjustsImageWhenAncestorFocused" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="scrollViewStyleAttributes">
        <xs:attribute name="contentOffset" type="xs:string" />
        <xs:attribute name="contentSize" type="xs:string" />
        <xs:attribute name="contentInset" type="xs:string" />
        <xs:attribute name="isScrollEnabled" type="xs:boolean" />
        <xs:attribute name="isDirectionalLockEnabled" type="xs:boolean" />
        <xs:attribute name="isPagingEnabled" type="xs:boolean" />
        <xs:attribute name="bounces" type="xs:boolean" />
        <xs:attribute name="alwaysBounceVertical" type="xs:boolean" />
        <xs:attribute name="alwaysBounceHorizontal" type="xs:boolean" />
        <xs:attribute name="delaysContentTouches" type="xs:boolean" />
        <xs:attribute name="decelerationRate" type="xs:decimal" />
        <xs:attribute name="scrollIndicatorInsets" type="xs:string" />
        <xs:attribute name="showsHorizontalScrollIndicator" type="xs:boolean" />
        <xs:attribute name="showsVerticalScrollIndicator" type="xs:boolean" />
        <xs:attribute name="zoomScale" type="xs:decimal" />
        <xs:attribute name="maximumZoomScale" type="xs:decimal" />
        <xs:attribute name="minimumZoomScale" type="xs:decimal" />
        <xs:attribute name="bouncesZoom" type="xs:boolean" />
        <xs:attribute name="indicatorStyle" type="scrollViewIndicatorStyle" />
    </xs:attributeGroup>

    <xs:attributeGroup name="textStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="textColor" type="color"/>
        <xs:attribute name="font" type="xs:string"/>
        <xs:attribute name="numberOfLines" type="xs:nonNegativeInteger" />
        <xs:attribute name="textAlignment" type="textAlignment" />
    </xs:attributeGroup>

    <xs:attributeGroup name="textFieldStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attributeGroup ref="textStyleAttributes" />
        <xs:attribute name="text" type="xs:string"/>
        <xs:attribute name="placeholder" type="xs:string"/>
        <xs:attribute name="textColor" type="color"/>
        <xs:attribute name="font" type="xs:string"/>
        <xs:attribute name="textContainerInset" type="xs:string"/>
        <xs:attribute name="textAlignment" type="textAlignment" />
        <xs:attribute name="adjustsFontSizeToWidth" type="xs:boolean" />
        <xs:attribute name="clearsOnBeginEditing" type="xs:boolean" />
        <xs:attribute name="clearsOnInsertion" type="xs:boolean" />
        <xs:attribute name="allowsEditingTextAttributes" type="xs:boolean" />
        <xs:attribute name="background" type="xs:string"/>
        <xs:attribute name="disabledBackground" type="xs:string"/>
        <xs:attribute name="minimumFontSize" type="xs:decimal"/>
        <xs:attribute name="borderStyle" type="textBorderStyle"/>
        <xs:attribute name="clearButtonMode" type="textFieldViewMode"/>
        <xs:attribute name="leftViewMode" type="textFieldViewMode"/>
        <xs:attribute name="rightViewMode" type="textFieldViewMode"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="textViewStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="textColor" type="color"/>
        <xs:attribute name="text" type="xs:string"/>
        <xs:attribute name="font" type="xs:string"/>
        <xs:attribute name="textContainerInset" type="xs:string"/>
        <xs:attribute name="numberOfLines" type="xs:nonNegativeInteger" />
        <xs:attribute name="textAlignment" type="textAlignment" />
        <xs:attribute name="allowsEditingTextAttributes" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="labelStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attributeGroup ref="textStyleAttributes" />
        <xs:attribute name="text" type="xs:string"/>
        <xs:attribute name="highlightedTextColor" type="color"/>
        <xs:attribute name="isEnabled" type="xs:boolean"/>
        <xs:attribute name="adjustsFontSizeToFitWidth" type="xs:boolean"/>
        <xs:attribute name="allowsDefaultTighteningBeforeTruncation" type="xs:boolean"/>
        <xs:attribute name="isHighlighted" type="xs:boolean"/>
        <xs:attribute name="minimumScaleFactor" type="xs:decimal"/>
        <xs:attribute name="shadowOffset" type="xs:string"/>
        <xs:attribute name="shadowColor" type="color"/>
        <xs:attribute name="preferredMaxLayoutWidth" type="xs:decimal"/>
        <xs:attribute name="lineBreakMode" type="lineBreakMode"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="buttonStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attributeGroup ref="textStyleAttributes" />
        <xs:attribute name="titleColor" type="color" />
        <xs:attribute name="backgroundColor" type="color" />
        <xs:attribute name="titleShadowColor" type="color" />
        <xs:attribute name="image" type="xs:string" />
        <xs:attribute name="backgroundImage" type="xs:string" />
        <xs:attribute name="adjustsImageWhenHighlighted" type="xs:boolean" />
        <xs:attribute name="adjustsImageWhenDisabled" type="xs:boolean" />
        <xs:attribute name="showsTouchWhenHighlighted" type="xs:boolean" />
        <xs:attribute name="reversesTitleShadowWhenHighlighted" type="xs:boolean" />
        <xs:attribute name="contentEdgeInsets" type="xs:string" />
        <xs:attribute name="titleEdgeInsets" type="xs:string" />
        <xs:attribute name="imageEdgeInsets" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="activityIndicatorStyleAttributes">
        <xs:attributeGroup ref="viewStyleAttributes" />
        <xs:attribute name="color" type="color" />
        <xs:attribute name="hidesWhenStopped" type="xs:boolean" />
        <xs:attribute name="indicatorStyle" type="activityIndicatorStyle" />
    </xs:attributeGroup>

    <xs:complexType name="assignable">
        <xs:attribute name="field" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="viewType">
        <xs:complexContent>
            <xs:extension base="assignable">
                <xs:annotation>
                    <xs:documentation>The color attribute group indicates the color of an element.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="style" type="xs:string" />
                <xs:attributeGroup ref="viewStyleAttributes" />
                <xs:attributeGroup ref="layout:layoutAttributes" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="contentMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="left"/>
            <xs:enumeration value="scaleAspectFill"/>
            <xs:enumeration value="scaleAspectFit"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="visibility">
        <xs:restriction base="xs:string">
            <xs:enumeration value="visible"/>
            <xs:enumeration value="hidden"/>
            <xs:enumeration value="collapsed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="barStyle">
        <xs:restriction base="xs:string">
            <xs:enumeration value="default"/>
            <xs:enumeration value="black"/>
            <xs:enumeration value="blackTranslucent"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="searchBarStyle">
        <xs:restriction base="xs:string">
            <xs:enumeration value="default"/>
            <xs:enumeration value="minimal"/>
            <xs:enumeration value="prominent"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="datePickerMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="date"/>
            <xs:enumeration value="time"/>
            <xs:enumeration value="dateAndTime"/>
            <xs:enumeration value="countDownTimer"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="textAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="left" />
            <xs:enumeration value="right" />
            <xs:enumeration value="center" />
            <xs:enumeration value="justified" />
            <xs:enumeration value="natural" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="scrollViewIndicatorStyle">
        <xs:restriction base="xs:string">
            <xs:enumeration value="default" />
            <xs:enumeration value="black" />
            <xs:enumeration value="white" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="lineBreakMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="byWordWrapping" />
            <xs:enumeration value="byCharWrapping" />
            <xs:enumeration value="byClipping" />
            <xs:enumeration value="byTruncatingHead" />
            <xs:enumeration value="byTruncatingTail" />
            <xs:enumeration value="byTruncatingMiddle" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="textBorderStyle">
        <xs:restriction base="xs:string">
            <xs:enumeration value="line" />
            <xs:enumeration value="bezel" />
            <xs:enumeration value="none" />
            <xs:enumeration value="roundedRect" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="textFieldViewMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="never" />
            <xs:enumeration value="whileEditing" />
            <xs:enumeration value="unlessEditing" />
            <xs:enumeration value="always" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="layoutAxis">
        <xs:restriction base="xs:string">
            <xs:enumeration value="vertical" />
            <xs:enumeration value="horizontal" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="layoutDistribution">
        <xs:restriction base="xs:string">
            <xs:enumeration value="fill" />
            <xs:enumeration value="fillEqually" />
            <xs:enumeration value="fillProportionally" />
            <xs:enumeration value="equalSpacing" />
            <xs:enumeration value="equalCentering" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="layoutAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="fill" />
            <xs:enumeration value="firstBaseline" />
            <xs:enumeration value="lastBaseline" />
            <xs:enumeration value="leading" />
            <xs:enumeration value="trailing" />
            <xs:enumeration value="center" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="color">
        <!-- should contain hexColor, but autocomplete-xml crashes -->
        <xs:union memberTypes="namedColor hexColor"/>
    </xs:simpleType>

    <xs:simpleType name="activityIndicatorStyle">
        <xs:restriction base="xs:string">
            <xs:enumeration value="white" />
            <xs:enumeration value="whiteLarge" />
            <xs:enumeration value="gray" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="hexColor">
        <xs:annotation>
            <xs:documentation>The color entity indicates the color of an element. Color may be represented as hexadecimal RGB triples, as in HTML, or as hexadecimal ARGB tuples, with the A indicating alpha of transparency. An alpha value of 00 is totally transparent; FF is totally opaque. If RGB is used, the A value is assumed to be FF. For instance, the RGB value "#800080" represents purple. An ARGB value of "#40800080" would be a transparent purple. As in SVG 1.1, colors are defined in terms of the sRGB color space (IEC 61966).</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="#[\dA-Fa-f]{6}([\dA-Fa-f][\dA-Fa-f])?"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="rectEdge">
        <xs:list>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="all" />
                    <xs:enumeration value="top" />
                    <xs:enumeration value="bottom" />
                    <xs:enumeration value="left" />
                    <xs:enumeration value="right" />
                </xs:restriction>
            </xs:simpleType>
        </xs:list>
    </xs:simpleType>

    <xs:simpleType name="namedColor">
        <xs:restriction base="xs:string">
            <xs:enumeration value="black"/>
            <xs:enumeration value="darkGray"/>
            <xs:enumeration value="lightGray"/>
            <xs:enumeration value="white"/>
            <xs:enumeration value="gray"/>
            <xs:enumeration value="red"/>
            <xs:enumeration value="green"/>
            <xs:enumeration value="blue"/>
            <xs:enumeration value="cyan"/>
            <xs:enumeration value="yellow"/>
            <xs:enumeration value="magenta"/>
            <xs:enumeration value="orange"/>
            <xs:enumeration value="purple"/>
            <xs:enumeration value="brown"/>
            <xs:enumeration value="clear"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
